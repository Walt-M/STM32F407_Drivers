ARM GAS  C:\Users\Walte\AppData\Local\Temp\ccG24j6E.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"gpio_test.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Src/gpio_test.c"
  20              		.section	.text.main,"ax",%progbits
  21              		.align	1
  22              		.global	main
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	main:
  28              	.LFB130:
   1:Src/gpio_test.c **** /* USER CODE BEGIN Header */
   2:Src/gpio_test.c **** /**
   3:Src/gpio_test.c ****   ******************************************************************************
   4:Src/gpio_test.c ****   * @file           : main.c
   5:Src/gpio_test.c ****   * @brief          : Main program body
   6:Src/gpio_test.c ****   ******************************************************************************
   7:Src/gpio_test.c ****   * @attention
   8:Src/gpio_test.c ****   *
   9:Src/gpio_test.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Src/gpio_test.c ****   * All rights reserved.
  11:Src/gpio_test.c ****   *
  12:Src/gpio_test.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/gpio_test.c ****   * in the root directory of this software component.
  14:Src/gpio_test.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/gpio_test.c ****   *
  16:Src/gpio_test.c ****   ******************************************************************************
  17:Src/gpio_test.c ****   */
  18:Src/gpio_test.c **** /* USER CODE END Header */
  19:Src/gpio_test.c **** /* Includes ------------------------------------------------------------------*/
  20:Src/gpio_test.c **** #include "main.h"
  21:Src/gpio_test.c **** #include "stm32f407xx.h"
  22:Src/gpio_test.c **** #include "gpio.h"
  23:Src/gpio_test.c **** #include "rcc.h"
  24:Src/gpio_test.c **** #include <stdlib.h>
  25:Src/gpio_test.c **** /* Private includes ----------------------------------------------------------*/
  26:Src/gpio_test.c **** /* USER CODE BEGIN Includes */
  27:Src/gpio_test.c **** 
  28:Src/gpio_test.c **** /* USER CODE END Includes */
  29:Src/gpio_test.c **** 
  30:Src/gpio_test.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  C:\Users\Walte\AppData\Local\Temp\ccG24j6E.s 			page 2


  31:Src/gpio_test.c **** /* USER CODE BEGIN PTD */
  32:Src/gpio_test.c **** 
  33:Src/gpio_test.c **** /* USER CODE END PTD */
  34:Src/gpio_test.c **** 
  35:Src/gpio_test.c **** /* Private define ------------------------------------------------------------*/
  36:Src/gpio_test.c **** /* USER CODE BEGIN PD */
  37:Src/gpio_test.c **** /* USER CODE END PD */
  38:Src/gpio_test.c **** 
  39:Src/gpio_test.c **** /* Private macro -------------------------------------------------------------*/
  40:Src/gpio_test.c **** /* USER CODE BEGIN PM */
  41:Src/gpio_test.c **** 
  42:Src/gpio_test.c **** /* USER CODE END PM */
  43:Src/gpio_test.c **** 
  44:Src/gpio_test.c **** /* Private variables ---------------------------------------------------------*/
  45:Src/gpio_test.c **** 
  46:Src/gpio_test.c **** /* USER CODE BEGIN PV */
  47:Src/gpio_test.c **** 
  48:Src/gpio_test.c **** /* USER CODE END PV */
  49:Src/gpio_test.c **** 
  50:Src/gpio_test.c **** /* Private function prototypes -----------------------------------------------*/
  51:Src/gpio_test.c **** /* USER CODE BEGIN PFP */
  52:Src/gpio_test.c **** 
  53:Src/gpio_test.c **** /* USER CODE END PFP */
  54:Src/gpio_test.c **** 
  55:Src/gpio_test.c **** /* Private user code ---------------------------------------------------------*/
  56:Src/gpio_test.c **** /* USER CODE BEGIN 0 */
  57:Src/gpio_test.c **** 
  58:Src/gpio_test.c **** /* USER CODE END 0 */
  59:Src/gpio_test.c **** 
  60:Src/gpio_test.c **** /**
  61:Src/gpio_test.c ****   * @brief  The application entry point.
  62:Src/gpio_test.c ****   * @retval int
  63:Src/gpio_test.c ****   */
  64:Src/gpio_test.c **** int main(void)
  65:Src/gpio_test.c **** {
  29              		.loc 1 65 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 24
  36              		.cfi_offset 3, -24
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  66:Src/gpio_test.c ****   GPIO_Config *board_LED_Config = malloc(sizeof(GPIO_Config));
  42              		.loc 1 66 3 view .LVU1
  43              		.loc 1 66 35 is_stmt 0 view .LVU2
  44 0002 1820     		movs	r0, #24
  45 0004 FFF7FEFF 		bl	malloc
  46              	.LVL0:
  47 0008 0546     		mov	r5, r0
  48              	.LVL1:
  67:Src/gpio_test.c ****   GPIO_Config *board_Button_Config = malloc(sizeof(GPIO_Config));
ARM GAS  C:\Users\Walte\AppData\Local\Temp\ccG24j6E.s 			page 3


  49              		.loc 1 67 3 is_stmt 1 view .LVU3
  50              		.loc 1 67 38 is_stmt 0 view .LVU4
  51 000a 1820     		movs	r0, #24
  52              	.LVL2:
  53              		.loc 1 67 38 view .LVU5
  54 000c FFF7FEFF 		bl	malloc
  55              	.LVL3:
  56 0010 0646     		mov	r6, r0
  57              	.LVL4:
  68:Src/gpio_test.c **** 
  69:Src/gpio_test.c ****   __GPIOD_CLK_ENABLE;
  58              		.loc 1 69 3 is_stmt 1 view .LVU6
  59 0012 264B     		ldr	r3, .L5
  60 0014 1A6B     		ldr	r2, [r3, #48]
  61 0016 42F00802 		orr	r2, r2, #8
  62 001a 1A63     		str	r2, [r3, #48]
  70:Src/gpio_test.c ****   __GPIOA_CLK_ENABLE;
  63              		.loc 1 70 3 view .LVU7
  64 001c 1A6B     		ldr	r2, [r3, #48]
  65 001e 42F00102 		orr	r2, r2, #1
  66 0022 1A63     		str	r2, [r3, #48]
  71:Src/gpio_test.c **** 
  72:Src/gpio_test.c ****   board_LED_Config->Mode = GPIO_MODE_OUTPUT;
  67              		.loc 1 72 3 view .LVU8
  68              		.loc 1 72 26 is_stmt 0 view .LVU9
  69 0024 0123     		movs	r3, #1
  70 0026 2B60     		str	r3, [r5]
  73:Src/gpio_test.c ****   board_LED_Config->Type = GPIO_TYPE_PP;
  71              		.loc 1 73 3 is_stmt 1 view .LVU10
  72              		.loc 1 73 26 is_stmt 0 view .LVU11
  73 0028 0024     		movs	r4, #0
  74 002a 6C60     		str	r4, [r5, #4]
  74:Src/gpio_test.c ****   board_LED_Config->Speed = GPIO_SPEED_LOW;
  75              		.loc 1 74 3 is_stmt 1 view .LVU12
  76              		.loc 1 74 27 is_stmt 0 view .LVU13
  77 002c AC60     		str	r4, [r5, #8]
  75:Src/gpio_test.c ****   board_LED_Config->PUPD = GPIO_PUPD_NONE;
  78              		.loc 1 75 3 is_stmt 1 view .LVU14
  79              		.loc 1 75 26 is_stmt 0 view .LVU15
  80 002e EC60     		str	r4, [r5, #12]
  76:Src/gpio_test.c ****   board_LED_Config->LOCK = GPIO_LOCK_OFF;
  81              		.loc 1 76 3 is_stmt 1 view .LVU16
  82              		.loc 1 76 26 is_stmt 0 view .LVU17
  83 0030 2C61     		str	r4, [r5, #16]
  77:Src/gpio_test.c ****   board_LED_Config->ALT = GPIO_ALT_AF0;
  84              		.loc 1 77 3 is_stmt 1 view .LVU18
  85              		.loc 1 77 25 is_stmt 0 view .LVU19
  86 0032 6C61     		str	r4, [r5, #20]
  78:Src/gpio_test.c **** 
  79:Src/gpio_test.c ****   board_Button_Config->Mode = GPIO_MODE_INPUT;
  87              		.loc 1 79 3 is_stmt 1 view .LVU20
  88              		.loc 1 79 29 is_stmt 0 view .LVU21
  89 0034 0460     		str	r4, [r0]
  80:Src/gpio_test.c ****   board_Button_Config->Type = GPIO_TYPE_PP;
  90              		.loc 1 80 3 is_stmt 1 view .LVU22
  91              		.loc 1 80 29 is_stmt 0 view .LVU23
  92 0036 4460     		str	r4, [r0, #4]
ARM GAS  C:\Users\Walte\AppData\Local\Temp\ccG24j6E.s 			page 4


  81:Src/gpio_test.c ****   board_Button_Config->Speed = GPIO_SPEED_LOW;
  93              		.loc 1 81 3 is_stmt 1 view .LVU24
  94              		.loc 1 81 30 is_stmt 0 view .LVU25
  95 0038 8460     		str	r4, [r0, #8]
  82:Src/gpio_test.c ****   board_Button_Config->PUPD = GPIO_PUPD_NONE;
  96              		.loc 1 82 3 is_stmt 1 view .LVU26
  97              		.loc 1 82 29 is_stmt 0 view .LVU27
  98 003a C460     		str	r4, [r0, #12]
  83:Src/gpio_test.c ****   board_Button_Config->LOCK = GPIO_LOCK_OFF;
  99              		.loc 1 83 3 is_stmt 1 view .LVU28
 100              		.loc 1 83 29 is_stmt 0 view .LVU29
 101 003c 0461     		str	r4, [r0, #16]
  84:Src/gpio_test.c ****   board_Button_Config->ALT = GPIO_ALT_AF0;
 102              		.loc 1 84 3 is_stmt 1 view .LVU30
 103              		.loc 1 84 28 is_stmt 0 view .LVU31
 104 003e 4461     		str	r4, [r0, #20]
  85:Src/gpio_test.c **** 
  86:Src/gpio_test.c **** 
  87:Src/gpio_test.c ****   GPIO_Init(BOARD_LED_Port, BOARD_GREEN_LED_Pin, board_LED_Config);
 105              		.loc 1 87 3 is_stmt 1 view .LVU32
 106 0040 1B4F     		ldr	r7, .L5+4
 107 0042 2A46     		mov	r2, r5
 108 0044 0C21     		movs	r1, #12
 109 0046 3846     		mov	r0, r7
 110              	.LVL5:
 111              		.loc 1 87 3 is_stmt 0 view .LVU33
 112 0048 FFF7FEFF 		bl	GPIO_Init
 113              	.LVL6:
  88:Src/gpio_test.c ****   GPIO_Init(BOARD_LED_Port, BOARD_ORANGE_LED_Pin, board_LED_Config);
 114              		.loc 1 88 3 is_stmt 1 view .LVU34
 115 004c 2A46     		mov	r2, r5
 116 004e 0D21     		movs	r1, #13
 117 0050 3846     		mov	r0, r7
 118 0052 FFF7FEFF 		bl	GPIO_Init
 119              	.LVL7:
  89:Src/gpio_test.c ****   GPIO_Init(BOARD_LED_Port, BOARD_RED_LED_Pin, board_LED_Config);
 120              		.loc 1 89 3 view .LVU35
 121 0056 2A46     		mov	r2, r5
 122 0058 0E21     		movs	r1, #14
 123 005a 3846     		mov	r0, r7
 124 005c FFF7FEFF 		bl	GPIO_Init
 125              	.LVL8:
  90:Src/gpio_test.c ****   GPIO_Init(BOARD_LED_Port, BOARD_BLUE_LED_Pin, board_LED_Config);
 126              		.loc 1 90 3 view .LVU36
 127 0060 2A46     		mov	r2, r5
 128 0062 0F21     		movs	r1, #15
 129 0064 3846     		mov	r0, r7
 130 0066 FFF7FEFF 		bl	GPIO_Init
 131              	.LVL9:
  91:Src/gpio_test.c **** 
  92:Src/gpio_test.c ****   GPIO_Init(BOARD_B1_Port, BOARD_USER_B1_Pin, board_Button_Config);
 132              		.loc 1 92 3 view .LVU37
 133 006a 3246     		mov	r2, r6
 134 006c 2146     		mov	r1, r4
 135 006e 1148     		ldr	r0, .L5+8
 136 0070 FFF7FEFF 		bl	GPIO_Init
 137              	.LVL10:
ARM GAS  C:\Users\Walte\AppData\Local\Temp\ccG24j6E.s 			page 5


 138              	.L2:
  93:Src/gpio_test.c **** 
  94:Src/gpio_test.c ****   while (1)
 139              		.loc 1 94 3 view .LVU38
  95:Src/gpio_test.c ****   {
  96:Src/gpio_test.c ****     if (GPIO_GetState(BOARD_B1_Port, BOARD_USER_B1_Pin) == GPIO_PIN_ON){
 140              		.loc 1 96 5 view .LVU39
 141              		.loc 1 96 9 is_stmt 0 view .LVU40
 142 0074 0021     		movs	r1, #0
 143 0076 0F48     		ldr	r0, .L5+8
 144 0078 FFF7FEFF 		bl	GPIO_GetState
 145              	.LVL11:
 146              		.loc 1 96 8 view .LVU41
 147 007c 0128     		cmp	r0, #1
 148 007e F9D1     		bne	.L2
  97:Src/gpio_test.c ****       GPIO_Write(BOARD_LED_Port, BOARD_GREEN_LED_Pin, GPIO_PIN_ON);
 149              		.loc 1 97 7 is_stmt 1 view .LVU42
 150 0080 0B4C     		ldr	r4, .L5+4
 151 0082 0122     		movs	r2, #1
 152 0084 0C21     		movs	r1, #12
 153 0086 2046     		mov	r0, r4
 154 0088 FFF7FEFF 		bl	GPIO_Write
 155              	.LVL12:
  98:Src/gpio_test.c ****       GPIO_Write(BOARD_LED_Port, BOARD_ORANGE_LED_Pin, GPIO_PIN_ON);
 156              		.loc 1 98 7 view .LVU43
 157 008c 0122     		movs	r2, #1
 158 008e 0D21     		movs	r1, #13
 159 0090 2046     		mov	r0, r4
 160 0092 FFF7FEFF 		bl	GPIO_Write
 161              	.LVL13:
  99:Src/gpio_test.c ****       GPIO_Write(BOARD_LED_Port, BOARD_RED_LED_Pin, GPIO_PIN_ON);
 162              		.loc 1 99 7 view .LVU44
 163 0096 0122     		movs	r2, #1
 164 0098 0E21     		movs	r1, #14
 165 009a 2046     		mov	r0, r4
 166 009c FFF7FEFF 		bl	GPIO_Write
 167              	.LVL14:
 100:Src/gpio_test.c ****       GPIO_Write(BOARD_LED_Port, BOARD_BLUE_LED_Pin, GPIO_PIN_ON);
 168              		.loc 1 100 7 view .LVU45
 169 00a0 0122     		movs	r2, #1
 170 00a2 0F21     		movs	r1, #15
 171 00a4 2046     		mov	r0, r4
 172 00a6 FFF7FEFF 		bl	GPIO_Write
 173              	.LVL15:
 174 00aa E3E7     		b	.L2
 175              	.L6:
 176              		.align	2
 177              	.L5:
 178 00ac 00380240 		.word	1073887232
 179 00b0 000C0240 		.word	1073875968
 180 00b4 00000240 		.word	1073872896
 181              		.cfi_endproc
 182              	.LFE130:
 184              		.text
 185              	.Letext0:
 186              		.file 2 "c:\\users\\walte\\tools\\arm-gnu-toolchain-12.2.rel1-mingw-w64-i686-arm-none-eabi\\arm-no
 187              		.file 3 "c:\\users\\walte\\tools\\arm-gnu-toolchain-12.2.rel1-mingw-w64-i686-arm-none-eabi\\arm-no
ARM GAS  C:\Users\Walte\AppData\Local\Temp\ccG24j6E.s 			page 6


 188              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 189              		.file 5 "Inc/gpio.h"
 190              		.file 6 "c:\\users\\walte\\tools\\arm-gnu-toolchain-12.2.rel1-mingw-w64-i686-arm-none-eabi\\lib\\g
 191              		.file 7 "c:\\users\\walte\\tools\\arm-gnu-toolchain-12.2.rel1-mingw-w64-i686-arm-none-eabi\\arm-no
ARM GAS  C:\Users\Walte\AppData\Local\Temp\ccG24j6E.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 gpio_test.c
C:\Users\Walte\AppData\Local\Temp\ccG24j6E.s:21     .text.main:00000000 $t
C:\Users\Walte\AppData\Local\Temp\ccG24j6E.s:27     .text.main:00000000 main
C:\Users\Walte\AppData\Local\Temp\ccG24j6E.s:178    .text.main:000000ac $d

UNDEFINED SYMBOLS
malloc
GPIO_Init
GPIO_GetState
GPIO_Write
